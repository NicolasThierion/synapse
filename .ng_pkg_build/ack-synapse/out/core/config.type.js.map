{"version":3,"file":"config.type.js","sourceRoot":"","sources":["../../../../src/core/config.type.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,sBAAsB,EAAsB,MAAM,gBAAgB,CAAC;AAC5E,OAAO,EAAE,oBAAoB,EAA2C,WAAW,EAAE,MAAM,aAAa,CAAC;;;;AAKzG,MAAM;;wBAC4B;IAC9B,OAAO,EAAE,SAAS;IAClB,gBAAgB,EAAE,EAAE;IACpB,eAAe,EAAE,EAAE;IACnB,OAAO,EAAE,WAAW,CAAC,IAAI;IACzB,OAAO,EAAE,EAAE;IACX,WAAW,EAAE,IAAI,sBAAsB,EAAE;IACzC,WAAW,EAAE,oBAAoB,CAAC,IAAI;CACvC","sourcesContent":["import { FetchApiBackendAdapter, HttpBackendAdapter } from './http-backend';\nimport { ContentTypeConstants, HttpRequestHandler, HttpResponseHandler, ObserveType } from './constants';\n\n/**\n * Global configuration for Synapse APIs\n */\nexport class SynapseConfig {\n  static DEFAULT: SynapseConfig = {\n    baseUrl: undefined,\n    responseHandlers: [],\n    requestHandlers: [],\n    observe: ObserveType.BODY,\n    headers: {},\n    httpBackend: new FetchApiBackendAdapter(),\n    contentType: ContentTypeConstants.JSON\n  };\n\n  /**\n   * The base url.\n   * eg:\n   *  - 'https://some-service/'\n   *  - '127.0.0.1:8080/'\n   */\n  baseUrl: string;\n\n  /**\n   * The http backend adapter implementation;\n   */\n  httpBackend?: HttpBackendAdapter;\n  headers?: Object;\n  requestHandlers?: HttpRequestHandler[];\n  responseHandlers?: HttpResponseHandler[];\n  contentType?: ContentTypeConstants;\n  observe?: ObserveType;\n}\n"]}