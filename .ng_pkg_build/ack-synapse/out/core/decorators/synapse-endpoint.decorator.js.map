{"version":3,"file":"synapse-endpoint.decorator.js","sourceRoot":"","sources":["../../../../../src/core/decorators/synapse-endpoint.decorator.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { assert } from '../../utils/assert';\nimport { SynapseApiReflect } from './synapse-api.reflect';\nimport { joinPath, joinQueryParams, mergeConfigs } from '../../utils/utils';\nimport { MapperType } from '../mapper.type';\nimport { Headers } from '../core';\nimport { HttpBackendAdapter } from '../http-backend';\nimport { SynapseError } from '../../utils/synapse-error';\nimport { cloneDeep, defaultsDeep, isFunction, isString, isUndefined, mergeWith } from 'lodash';\n\nimport DecoratedArgs = SynapseApiReflect.DecoratedArgs;\n\nimport { ContentTypeConstants, HttpMethod, HttpRequestHandler, HttpResponseHandler, ObserveType } from '../constants';\nimport { ResponseContentTypeConverter, ResponseContentTypeConverterStore } from './content-type-converters/rx/response-converter-store';\nimport { PromiseConverterStore } from './promise-converters/promise-converter-store';\nimport { RequestContentTypeConverter, RequestConverterStore } from './content-type-converters/tx/request-converter-store';\nimport { EndpointConfig } from '../endpoint-config.type';\nimport { SynapseApiConfig } from '../api-config.type';\nimport { TypedResponse } from '../typed-response.model';\n\n/**\n * Parameters decorated with @Headers are considered to be of this type.\n */\nexport interface HeadersType {\n  [k: string]: string | string[];\n}\n\n/**\n * Parameters decorated with @PathParam are considered to be of this type.\n */\nexport type PathParamsType = string | number | boolean;\n\n/**\n * Parameters decorated with @QueryParams are considered to be of this type.\n */\nexport type QueryParametersType = Object;\n\n/**\n * GET method decorator.\n *\n * @param {EndpointConfig | string} conf the configuration for this endpoint\n * @returns {MethodDecorator} the GET decorator\n */\nexport function GET(conf: EndpointConfig | string = ''): MethodDecorator {\n  return _httpRequestDecorator(HttpMethod.GET, conf);\n}\n\n/**\n * POST method decorator.\n *\n * @param {EndpointConfig | string} conf the configuration for this endpoint\n * @returns {MethodDecorator} the POST decorator\n */\nexport function POST(conf: EndpointConfig | string = ''): MethodDecorator {\n  return _httpRequestDecorator(HttpMethod.POST, conf);\n}\n\n/**\n * PUT method decorator.\n *\n * @param {EndpointConfig | string} conf the configuration for this endpoint\n * @returns {MethodDecorator} the PUT decorator\n */\nexport function PUT(conf: EndpointConfig | string = ''): MethodDecorator {\n  return _httpRequestDecorator(HttpMethod.PUT, conf);\n}\n\n/**\n * PATCH method decorator.\n *\n * @param {EndpointConfig | string} conf the configuration for this endpoint\n * @returns {MethodDecorator} the PATCH decorator\n */\nexport function PATCH(conf: EndpointConfig | string = ''): MethodDecorator {\n  return _httpRequestDecorator(HttpMethod.PATCH, conf);\n}\n\n/**\n * DELETE method decorator.\n *\n * @param {EndpointConfig | string} conf the configuration for this endpoint\n * @returns {MethodDecorator} the DELETE decorator\n */\nexport function DELETE(conf: EndpointConfig | string = ''): MethodDecorator {\n  return _httpRequestDecorator(HttpMethod.DELETE, conf);\n}\n\n/**\n * Parameters available at runtime to create the Request object.\n */\ninterface RequestAndConf {\n  request?: Request;\n  conf: EndpointConfig & SynapseApiConfig;\n}\n\ntype EndpointReturnType = Promise<Response> | Observable<Response>;\n\n/**\n * Argument bundle that feed a method @GET, @POST, resolved at runtime.\n */\nclass CallArgs {\n  pathParams?: string[];\n  queryParams?: QueryParametersType;\n  headers?: HeadersType;\n  body?: {\n    value: any,\n    contentType: ContentTypeConstants\n  };\n}\n\nfunction _httpRequestDecorator(method: HttpMethod, conf: EndpointConfig | string): MethodDecorator {\n  return function HttpMethodDecorator(target: Object,\n                                      propertyKey: string | symbol,\n                                      descriptor: TypedPropertyDescriptor<any>): void {\n    const original = descriptor.value;\n    const endpointConf = _asEndpointConf(conf);\n\n    const qId = endpointConf.path.indexOf('?');\n    let parsedQueryParams = {};\n    if (qId >= 0) {\n      const queryString = endpointConf.path.substring(qId + 1);\n      endpointConf.path = endpointConf.path.substring(0, qId);\n\n      parsedQueryParams = JSON.parse(`{\"${decodeURI(queryString)\n        .replace(/\"/g, '\\\\\"')\n        .replace(/&/g, '\",\"')\n        .replace(/=/g, '\":\"')}\"}`);\n    }\n\n    if (!isFunction(original)) {\n      throw new TypeError(`@${method} should annotate methods only`);\n    }\n\n    // infer desired return type, and make a converter for it (Promise / Observable)\n    const returnTypeConverter = _returnTypeConverter(descriptor, propertyKey);\n    descriptor.value = function(...args: any[]): EndpointReturnType {\n      // tslint:disable no-invalid-this\n      // do not only rely on target.\n      // Target is proto of the annotated class of this method. If we call this method from a child class,\n      // we rather want to get proto of this child class.\n      let apiConf = SynapseApiReflect.getConf((this as any).__proto__);\n\n      if (SynapseApiReflect.hasConf(target) && target !== (this as any).__proto__) {\n        // but also get config from parent class if any\n        apiConf = mergeConfigs({}, apiConf, SynapseApiReflect.getConf(target));\n      }\n      // tslint:enable\n\n      const decoratedArgs = SynapseApiReflect.getDecoratedArgs(target, propertyKey);\n      const cargs: CallArgs = _parseArgs(args, decoratedArgs);\n      cargs.queryParams = _mergeQueryParams([parsedQueryParams, cargs.queryParams]);\n\n      const promise = _makeRequestAndConf(method, apiConf, endpointConf, cargs)\n        .then((requestAndConf: RequestAndConf) => {\n          // execute the request\n          return _doRequest(apiConf.httpBackend, requestAndConf);\n        });\n\n      // return result as a promise / observable.\n      return returnTypeConverter(promise);\n    };\n  };\n}\n\nfunction _makeRequestAndConf(method: HttpMethod,\n                             apiConf: SynapseApiConfig,\n                             endpointConf: EndpointConfig,\n                             cargs: CallArgs): Promise<RequestAndConf> {\n  if (method === HttpMethod.GET && cargs.body) {\n    throw new TypeError('cannot specify @Body with method annotated with @Get');\n  }\n\n  // merge handlers\n  const requestHandlers = [].concat(apiConf.requestHandlers || []).concat(endpointConf.requestHandlers || []);\n  const responseHandlers = [].concat(apiConf.responseHandlers || []).concat(endpointConf.responseHandlers || []);\n\n  let body, converter: RequestContentTypeConverter;\n  const request = new Request(\n    _makeUrl(apiConf.baseUrl,\n      joinPath(apiConf.path, endpointConf.path),\n      cargs.pathParams,\n      cargs.queryParams\n    ), {\n      headers: defaultsDeep(cargs.headers, apiConf.headers),\n      method: method as string\n    });\n\n  const requestAndConf = {\n    request,\n    conf: defaultsDeep({\n      requestHandlers, responseHandlers,\n      mapper: endpointConf.mapper ? endpointConf.mapper : (a: any) => a\n    }, endpointConf, apiConf)\n  };\n\n  if (cargs.body) {\n    converter = _getRequestContentTypeConverter(cargs.body.contentType);\n    body = cargs.body.value;\n\n    const ctHeader = cargs.headers[Headers.CONTENT_TYPE];\n    if (!isUndefined(ctHeader) && ctHeader.indexOf(cargs.body.contentType as string) <= 0) {\n      throw new SynapseError(`Tried to send a @Body with Content-Type=\"${cargs.body.contentType}\", \\\nbut \"Content-Type\" header has already been set to \"${cargs.headers[Headers.CONTENT_TYPE]}\"`);\n    }\n\n    // convert body according to its Content-Type, and set proper headers\n    return converter\n      .convert(body, request)\n      .then(r => {\n        requestAndConf.request = r;\n\n        return requestAndConf;\n      });\n  } else {\n    return Promise.resolve(requestAndConf);\n  }\n}\n\nfunction _getRequestContentTypeConverter(contentType: ContentTypeConstants): RequestContentTypeConverter {\n  return RequestConverterStore.getConverterFor(contentType);\n}\n\n/**\n * Switch on {@link RequestAndConf.conf.observe}, and return either\n *  - a converter to map the body\n *  - a converter to create a copy of the response with the mapped body\n * @param {RequestAndConf} requestConf\n * @returns {ResponseContentTypeConverter<any>}\n * @private\n */\nfunction _getResponseContentTypeConverter(requestConf: RequestAndConf): ResponseContentTypeConverter<any> {\n  return ResponseContentTypeConverterStore.getConverterFor(requestConf.conf.contentType);\n}\n\nfunction _toObservedReturnType<T>(requestConf: RequestAndConf, response: TypedResponse<T>): T | TypedResponse<T> {\n  switch (requestConf.conf.observe) {\n    case ObserveType.BODY:\n      return response.body;\n\n    case ObserveType.RESPONSE:\n      return response;\n    default:\n      throw new TypeError(`Unhandled value for property \"observe\" : ${requestConf.conf.observe}`);\n  }\n}\n\nfunction _doRequest(http: HttpBackendAdapter, requestConf: RequestAndConf): Promise<Response> {\n  _applyRequestHandlers(requestConf);\n  const m = `${requestConf.request.method}`.toLocaleLowerCase();\n  const req = requestConf.request;\n  if (!isFunction(http[m])) {\n    throw new TypeError(`unexpected method : ${req.method}`);\n  }\n\n  const res: Promise<Response> = http[m](req);\n  const converter = _getResponseContentTypeConverter(requestConf);\n\n  return _assertIsResponsePromise(http, req.method, res)\n    .then((response: Response) => _applyResponseHandlers(requestConf, response))\n    .then(async r => new TypedResponse(requestConf.conf.mapper(await converter.convert(r)), r))\n    .then(r => _toObservedReturnType(requestConf, r));\n}\n\nfunction _makeUrl(baseUrl: string, path: string, pathParams: PathParamsType[], queryParams: QueryParametersType): string {\n  assert(!isUndefined(queryParams));\n  assert(!isUndefined(pathParams));\n  assert(!isUndefined(baseUrl));\n  assert(!isUndefined(path));\n\n  return joinQueryParams(joinPath(baseUrl, _replacePathParams(path, pathParams)), queryParams);\n}\n\nfunction _mergeQueryParams(queryParams: QueryParametersType[]): QueryParametersType {\n  return mergeWith({}, ...queryParams.filter(a => !isUndefined(a)),\n    (objValue: any, srcValue: any, key: string, object: any /*, source: any, stack: any */) => {\n      if (isUndefined(objValue)) {\n        object[key] = srcValue;\n      } else {\n        if (!isUndefined(srcValue)) {\n          const o = [].concat(objValue);\n          o.push(srcValue);\n          object[key] = o;\n        }\n      }\n\n      return object[key];\n    });\n}\n\nfunction _parseArgs(args: any[], decoratedArgs: DecoratedArgs): CallArgs {\n  const res = new CallArgs();\n  res.queryParams = _mergeQueryParams(\n    decoratedArgs.query\n      .map(i => args[i]));\n\n  res.headers = decoratedArgs.headers\n    .map(i => args[i])\n    .reduce((previousValue, currentValue) => defaultsDeep(previousValue, currentValue), {});\n  res.pathParams = decoratedArgs.path.map(i => args[i]);\n\n  // if invoke a body\n  if (decoratedArgs.body) {\n    // get body runtime value\n    res.body = {\n      value: args[decoratedArgs.body.index],\n      contentType: decoratedArgs.body.params.contentType\n    };\n\n    // if body comes with its mapper\n    const mapper = decoratedArgs.body.params.mapper as MapperType<any, any>;\n    if (mapper) {\n      if (!isFunction(mapper)) {\n        throw new TypeError(`mapper should be a function. Got ${mapper}`);\n      }\n      res.body.value = mapper(res.body.value);\n      if (isUndefined(res.body.value)) {\n        console.warn('Mapper returned value undefined');\n      }\n    }\n  } else {\n    res.body = undefined;\n  }\n\n  return res;\n}\n\nfunction _replacePathParams(path: string, pathParams: (string | number | boolean)[] = []): string {\n  let i = 0;\n  const PATH_PARAMS_REGEX = /:[A-Za-z\\d]+/;\n  pathParams.forEach(p => {\n    // if no more pathParams to replace\n    if (!path.match(PATH_PARAMS_REGEX)) {\n      throw new Error(`Too many @PathParam provided for url \"${path}\".\n      (got ${pathParams.length}, but expected ${i}). Cannot bind value ${p} to any path parameter`);\n    }\n\n    path = path.replace(PATH_PARAMS_REGEX, `${p}`);\n    if (isUndefined(p)) {\n      throw new TypeError(`${path} : value for path parameter #${i} is undefined`);\n    }\n    i++;\n  });\n\n  // if still some pathParams to replace\n  const result = path.match(PATH_PARAMS_REGEX);\n\n  if (result) {\n    throw new Error(`path param \"${result[0]}\" not provided for url \"${path}\"`);\n  }\n\n  return path;\n}\n\nfunction _asEndpointConf(conf: EndpointConfig | string = ''): EndpointConfig {\n  let conf_: EndpointConfig;\n  if (isString(conf)) {\n    conf_ = {\n      path: conf as string\n    };\n  } else {\n    conf_ = cloneDeep(conf) as EndpointConfig;\n  }\n\n  conf_.path = conf_.path || '';\n  conf_.requestHandlers = conf_.requestHandlers || [];\n  conf_.requestHandlers = conf_.requestHandlers || [];\n\n  return conf_;\n}\n\nfunction _applyRequestHandlers(r: RequestAndConf): RequestAndConf {\n  if (r.conf.requestHandlers) {\n    r.conf.requestHandlers.forEach((h: HttpRequestHandler) => {\n      h(r.request);\n    });\n  }\n\n  return r;\n}\n\nfunction _applyResponseHandlers(requestAndConf: RequestAndConf, response: Response): Response {\n  requestAndConf.conf.responseHandlers.forEach((h: HttpResponseHandler) => h(response));\n\n  return response;\n}\n\nfunction _returnTypeConverter(descriptor: TypedPropertyDescriptor<any>,\n                              propertyKey: string | symbol): (promise: Promise<Response>) => EndpointReturnType {\n  assert(isFunction(descriptor.value));\n  let res: any;\n  try {\n    res = (descriptor.value as Function).apply(undefined);\n  } catch (e) {\n    console.warn(`cannot infer return type of function ${propertyKey}.`);\n  }\n\n  const converter = PromiseConverterStore.getConverterFor(res);\n\n  if (converter) {\n    return converter.convert;\n  } else {\n    const type = ({} || res as any).__proto__ ? (res as any).__proto__.constructor.name : typeof res;\n    throw new TypeError(`Function ${propertyKey} returned object of unexpected type ${type}`);\n  }\n}\n\n/**\n * Ensure the given object is a Response. We consider that any httpBackendAdapter should return a Promise<Response>,\n * This function asserts that this is true.\n *\n */\nexport function _assertIsResponsePromise(http: HttpBackendAdapter, method: string, object: any): Promise<Response> {\n\n  if (!object) {\n    throw new SynapseError(`HttpBackendAdapter ${http.constructor.name} did not returned any value after calling method ${method}. \\\nThat's an error. If you use your own HttpBackendAdapter implementation, please ensure it always returns a promise.`);\n  } else if (!object.then) {\n    throw new SynapseError(`HttpBackendAdapter ${http.constructor.name} did not returned a promise after calling method ${method}. \\\n(Got ${object}). If you use your own HttpBackendAdapter implementation, please ensure it always returns a promise.`);\n  }\n\n  return (object as Promise<any>).then((r: any) => {\n\n    const mandatoryFields = ['headers', 'statusText', 'status'];\n    const missing = mandatoryFields.filter(f => isUndefined(r[f]));\n\n    if (missing.length) {\n      throw new TypeError(`HttpBackendAdapter ${http.constructor.name} returned an object \\\nthat does not look like a Response after calling method ${method}:\nMissing fields: ${missing.join(', ')}. Got ${JSON.stringify(r)}`);\n    }\n\n    return r as Response;\n  });\n}\n"]}