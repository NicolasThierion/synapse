{"version":3,"file":"urlencoded-tx-converter.js","sourceRoot":"","sources":["../../../../../../../src/core/decorators/content-type-converters/tx/urlencoded-tx-converter.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EAAE,oBAAoB,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAC3E,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAC/D,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAC3C,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAExD,MAAM;;;;;;IACE,OAAO,CAAC,IAAS,EAAE,OAAgB;;YACvC,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxC,MAAM,IAAI,YAAY,CAAC;OACtB,OAAO,IAAI,GAAG,CAAC,CAAC;aAClB;YAED,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;YAE1F,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;gBAC1C,IAAI,EAAE,IAAI,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE;aAC1D,CAAC,CAAC,CAAC;;KACL;;;;;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACrB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;KACxC;CACF","sourcesContent":["import { RequestContentTypeConverter } from './request-converter-store';\nimport { ContentTypeConstants, HeaderConstants } from '../../../constants';\nimport { SynapseError } from '../../../../utils/synapse-error';\nimport { isArray, isObject } from 'lodash';\nimport { toQueryString } from '../../../../utils/utils';\n\nexport class UrlencodedTxConverter implements RequestContentTypeConverter {\n  async convert(body: any, request: Request): Promise<Request> {\n    if (!UrlencodedTxConverter.accept(body)) {\n      throw new SynapseError(`Expected body be Object | Array. \\\nGot \"${typeof body}\"`);\n    }\n\n    request.headers.set(HeaderConstants.CONTENT_TYPE, ContentTypeConstants.X_WWW_URL_ENCODED);\n\n    return Promise.resolve(new Request(request, {\n      body: new URLSearchParams(toQueryString(body)).toString()\n    }));\n  }\n\n  static accept(body: any): boolean {\n    return isObject(body) || isArray(body);\n  }\n}\n"]}