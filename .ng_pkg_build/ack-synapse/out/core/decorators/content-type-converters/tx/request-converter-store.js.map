{"version":3,"file":"request-converter-store.js","sourceRoot":"","sources":["../../../../../../../src/core/decorators/content-type-converters/tx/request-converter-store.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iCAAiC,CAAC;AAC/D,OAAO,EAAE,oBAAoB,EAAE,MAAM,oBAAoB,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;;;;;;;;;AAMlE,MAAM;;;;;;IAGJ,MAAM,CAAC,YAAY,CAAC,SAAsC,EAAE,WAA0C;QACpG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;KAC1C;;;;;IAED,MAAM,CAAC,eAAe,CAAC,WAAiC;QACtD,uBAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAC/C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACf,MAAM,IAAI,YAAY,CAAC,iEAAiE,WAAW,GAAG,CAAC,CAAC;SACzG;QAED,MAAM,CAAC,SAAS,CAAC;KAClB;;mCAbyE,EAAE;;;;;AAgB9E,qBAAqB,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE,EAAE,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACnF,qBAAqB,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE,EAAE,oBAAoB,CAAC,UAAU,CAAC,CAAC;AACzF,qBAAqB,CAAC,YAAY,CAAC,IAAI,qBAAqB,EAAE,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,CAAC","sourcesContent":["import { SynapseError } from '../../../../utils/synapse-error';\nimport { ContentTypeConstants } from '../../../constants';\nimport { JsonConverter } from './json-tx-converter';\nimport { TextConverter } from './text-tx-converter';\nimport { UrlencodedTxConverter } from './urlencoded-tx-converter';\n\nexport interface RequestContentTypeConverter {\n  convert(body: any, request: Request): Promise<Request>;\n}\n\nexport class RequestConverterStore {\n  private static converters: {[key: string]: RequestContentTypeConverter} = {};\n\n  static addConverter(converter: RequestContentTypeConverter, contentType: ContentTypeConstants | string): void {\n    this.converters[contentType] = converter;\n  }\n\n  static getConverterFor(contentType: ContentTypeConstants): RequestContentTypeConverter {\n    const converter = this.converters[contentType];\n    if (!converter) {\n      throw new SynapseError(`no Content-Type converters found for @Body with Content-Type \"${contentType}\"`);\n    }\n\n    return converter;\n  }\n}\n\nRequestConverterStore.addConverter(new JsonConverter(), ContentTypeConstants.JSON);\nRequestConverterStore.addConverter(new TextConverter(), ContentTypeConstants.PLAIN_TEXT);\nRequestConverterStore.addConverter(new UrlencodedTxConverter(), ContentTypeConstants.X_WWW_URL_ENCODED);\n"]}