{"version":3,"file":"text-tx-converter.js","sourceRoot":"","sources":["../../../../../../../src/core/decorators/content-type-converters/tx/text-tx-converter.ts"],"names":[],"mappings":";;;;;AACA,OAAO,EAAE,oBAAoB,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;AAC3E,OAAO,EAAE,QAAQ,EAAE,MAAM,QAAQ,CAAC;AAElC,MAAM;;;;;;IACE,OAAO,CAAC,IAAS,EAAE,OAAgB;;YACvC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,YAAY,EAAE,oBAAoB,CAAC,UAAU,CAAC,CAAC;YAEnF,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC7B;YAED,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,OAAO,EAAE;gBAC1C,IAAI;aACL,CAAC,CAAC,CAAC;;KACL;CACF","sourcesContent":["import { RequestContentTypeConverter } from './request-converter-store';\nimport { ContentTypeConstants, HeaderConstants } from '../../../constants';\nimport { isString } from 'lodash';\n\nexport class TextConverter implements RequestContentTypeConverter {\n  async convert(body: any, request: Request): Promise<Request> {\n    request.headers.set(HeaderConstants.CONTENT_TYPE, ContentTypeConstants.PLAIN_TEXT);\n\n    if (!isString(body)) {\n      body = JSON.stringify(body);\n    }\n\n    return Promise.resolve(new Request(request, {\n      body\n    }));\n  }\n}\n"]}