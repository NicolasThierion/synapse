{"version":3,"file":"response-converter-store.js","sourceRoot":"","sources":["../../../../../../../src/core/decorators/content-type-converters/rx/response-converter-store.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,oBAAoB,EAAE,MAAM,oBAAoB,CAAC;AAC1D,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;;;;;;;;;AAOpD,MAAM;;;;;;IAGJ,MAAM,CAAC,YAAY,CAAC,SAA4C,EAAE,WAA0C;QAC1G,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,SAAS,CAAC;KAC1C;;;;;IAED,MAAM,CAAC,eAAe,CAAC,WAAiC;QACtD,qBAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;YACf,OAAO,CAAC,IAAI,CAAC,oEAAoE,WAAW,GAAG,CAAC,CAAC;YACjG,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACxC;QAED,MAAM,CAAC,SAAS,CAAC;KAClB;;+CAd+E,EAAE;;;;;AAiBpF,iCAAiC,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE,EAAE,SAAS,CAAC,CAAC;AAC/E,iCAAiC,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE,EAAE,oBAAoB,CAAC,IAAI,CAAC,CAAC;AAC/F,iCAAiC,CAAC,YAAY,CAAC,IAAI,aAAa,EAAE,EAAE,oBAAoB,CAAC,UAAU,CAAC,CAAC","sourcesContent":["import { ContentTypeConstants } from '../../../constants';\nimport { JsonConverter } from './json-rx-converter';\nimport { TextConverter } from './text-rx-converter';\nimport { BlobConverter } from './blob-rx-converter';\n\n\nexport interface ResponseContentTypeConverter<T> {\n  convert(response: Response): Promise<T>;\n}\n\nexport class ResponseContentTypeConverterStore {\n  private static converters: {[key: string]: ResponseContentTypeConverter<any>} = {};\n\n  static addConverter(converter: ResponseContentTypeConverter<any>, contentType: ContentTypeConstants | string): void {\n    this.converters[contentType] = converter;\n  }\n\n  static getConverterFor(contentType: ContentTypeConstants): ResponseContentTypeConverter<any> {\n    let converter = this.converters[contentType];\n    if (!converter) {\n      console.warn(`no Content-Type converters found for response with Content-Type \"${contentType}\"`);\n      converter = this.converters['default'];\n    }\n\n    return converter;\n  }\n}\n\nResponseContentTypeConverterStore.addConverter(new BlobConverter(), 'default');\nResponseContentTypeConverterStore.addConverter(new JsonConverter(), ContentTypeConstants.JSON);\nResponseContentTypeConverterStore.addConverter(new TextConverter(), ContentTypeConstants.PLAIN_TEXT);\n"]}