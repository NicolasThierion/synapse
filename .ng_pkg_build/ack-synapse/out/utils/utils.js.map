{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/utils/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { QueryParametersType } from '../';\nimport * as qs from 'qs';\nimport { HttpBackendAdapter } from '../core/http-backend';\nimport { cloneDeep, isArray, isFunction, isObject, isUndefined, mergeWith } from 'lodash';\nimport { SynapseConfig } from '../core/config.type';\nimport { assert } from './assert';\nimport { SynapseApiConfig } from '../core/api-config.type';\nimport { EndpointConfig } from '../core/endpoint-config.type';\n\nexport type Constructor<T> = Function & {\n  new(...args: any[]): T;\n};\n\nexport function removeTrailingSlash(path: string): string {\n  if (path.endsWith('/')) {\n    path = path.substring(0, path.length - 1);\n  }\n  if (path.startsWith('/')) {\n    path = path.substring(1);\n  }\n\n  return path;\n}\n\nexport function joinPath(...path: string[]): string {\n  return path.map(p => removeTrailingSlash(p))\n    .filter(p => !!p)\n    .join('/');\n}\n\nexport function toQueryString(queryParameters: QueryParametersType | Object): string {\n return qs.stringify(queryParameters);\n}\n\nexport function fromQueryString(queryString: string): Object {\n  return qs.parse(queryString);\n}\n\nexport function joinQueryParams(url: string, queryParams: QueryParametersType): string {\n  const queryString = toQueryString(queryParams);\n\n  return [removeTrailingSlash(url), queryString].filter(s => !!s).join('?');\n}\n\nexport function validateHttpBackendAdapter(ba: HttpBackendAdapter): void {\n  const mandatoryFn = ['get', 'post', 'put', 'patch', 'delete'];\n  for (const fn of mandatoryFn) {\n    if (!isFunction(ba[fn])) {\n      assert(false);\n      throw new TypeError(`provided backend adapter is invalid: Does not have the function ${fn}`);\n    }\n  }\n}\n\nexport type SynapseMergedConfig = SynapseConfig | SynapseApiConfig | EndpointConfig;\nexport function mergeConfigs<T extends SynapseMergedConfig, U extends SynapseMergedConfig>(conf: T, ...confs: U[]): T & U {\n\n  return mergeWith(conf, ...confs, (value: any, srcValue: any, key: string, object: any, source: any) => {\n    if (key === 'httpBackend') {\n      return value;\n    }\n\n    if (source.hasOwnProperty(key)) {\n      if (isArray(value)) {\n        return value.concat(srcValue);\n      } else {\n        if (isUndefined(object[key])) {\n          return cloneDeep(source[key]);\n        } else {\n          if (isObject(object[key]) || isArray(object[key])) {\n            return mergeConfigs(object[key], source[key]);\n          } else {\n            return object[key];\n          }\n        }\n      }\n    }\n  });\n}\n"]}