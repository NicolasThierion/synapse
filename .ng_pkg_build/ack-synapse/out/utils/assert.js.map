{"version":3,"file":"assert.js","sourceRoot":"","sources":["../../../../src/utils/assert.ts"],"names":[],"mappings":";;;;;;;;;AAAA,MAAM,iBAAiB,SAAc,EAAE,OAAgB;IACrD,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;CAC/B;;;;;AAED,MAAM,qBAAqB,MAAe;IACxC,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;CACnC;AAID,qBAAI,SAAS,GAAc,GAAG,EAAE;IAC9B,MAAM,IAAI,KAAK,CAAC,2EAA2E,CAAC,CAAC;CAC9F,CAAC;;;;;;AAEF,uBAAuB,aAAsB;IAC3C,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,CAAC,SAAc,EAAE,OAAgB,EAAQ,EAAE;YAChD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;;gBAEf,uBAAM,GAAG,GAAG,IAAI,KAAK,CAAC,OAAO,IAAI,kBAAkB,CAAC,CAAC;gBACrD,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACzC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;;gBAGvD,QAAQ,CAAC;;gBAET,MAAM,GAAG,CAAC;aACX;SACF,CAAC;KACH;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,GAAG,EAAE;;SAEX,CAAC;KACH;CACF","sourcesContent":["export function assert(condition: any, message?: string): void {\n  _assertFn(condition, message);\n}\n\nexport function initAssert(enable: boolean): void {\n  _assertFn = _makeAssertFn(enable);\n}\n\ntype IAssertFn = (condition: any, message?: string) => void;\n\nlet _assertFn: IAssertFn = () => {\n  throw new Error('Asserts needs environment. Cannot use assert until \"initAssert\" is called');\n};\n\nfunction _makeAssertFn(enableAsserts: boolean): IAssertFn {\n  if (enableAsserts) {\n    return (condition: any, message?: string): void => {\n      if (!condition) {\n        // Create a new `Error`, which automatically gets `stack`\n        const err = new Error(message || 'Assertion failed');\n        err.stack = (err.stack || {}).toString();\n        err.stack = err.stack.split('\\n').splice(2).join('\\n');\n        /* tslint:disable no-debugger */\n        // jshint -W087\n        debugger;\n        /* tslint:enable no-debugger */\n        throw err;\n      }\n    };\n  } else {\n    return () => {\n      // noop\n    };\n  }\n}\n"]}